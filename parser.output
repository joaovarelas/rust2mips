Terminals unused in grammar

   not
   quote


Grammar

    0 $accept: program $end

    1 program: main

    2 main: fn fmain lpar rpar lbrace statements rbrace

    3 statements: statement statements
    4           | %empty

    5 statement: assignment
    6          | if_statement
    7          | while_statement
    8          | io_func
    9          | comments

   10 assignment: let symbol equal expr semic
   11           | let mut symbol equal expr semic
   12           | symbol equal expr semic

   13 if_statement: IF expr lbrace statements rbrace
   14             | IF expr lbrace statements rbrace ELSE lbrace statements rbrace
   15             | IF expr lbrace statements rbrace ELSE if_statement

   16 while_statement: WHILE expr lbrace statements rbrace

   17 io_func: fprintln
   18        | freadln

   19 fprintln: println lpar string rpar semic
   20         | println lpar symbol rpar semic
   21         | println lpar number rpar semic

   22 freadln: readln lpar symbol rpar semic
   23        | let symbol equal readln lpar rpar semic

   24 expr: expr and expr
   25     | expr or expr
   26     | expr eqt expr
   27     | expr neq expr
   28     | expr grt expr
   29     | expr geq expr
   30     | expr lrt expr
   31     | expr leq expr
   32     | expr plus expr
   33     | expr mult expr
   34     | expr minus expr
   35     | expr divi expr
   36     | expr mod expr
   37     | number
   38     | minus number
   39     | symbol

   40 comments: commentline


Terminals, with rules where they appear

$end (0) 0
error (256)
fn (258) 2
fmain (259) 2
let (260) 10 11 23
mut (261) 11
IF (262) 13 14 15
ELSE (263) 14 15
WHILE (264) 16
println (265) 19 20 21
readln (266) 22 23
number <number> (267) 21 37 38
symbol <symbol> (268) 10 11 12 20 22 23 39
string <string> (269) 19
plus (270) 32
minus (271) 34 38
mult (272) 33
divi (273) 35
mod (274) 36
not (275)
and (276) 24
or (277) 25
eqt (278) 26
grt (279) 28
geq (280) 29
lrt (281) 30
leq (282) 31
neq (283) 27
semic (284) 10 11 12 19 20 21 22 23
equal (285) 10 11 12 23
lbrace (286) 2 13 14 15 16
rbrace (287) 2 13 14 15 16
lpar (288) 2 19 20 21 22 23
rpar (289) 2 19 20 21 22 23
commentline <ast> (290) 40
quote (291)


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
program (38)
    on left: 1, on right: 0
main <ast> (39)
    on left: 2, on right: 1
statements <ast> (40)
    on left: 3 4, on right: 2 3 13 14 15 16
statement <ast> (41)
    on left: 5 6 7 8 9, on right: 3
assignment <ast> (42)
    on left: 10 11 12, on right: 5
if_statement <ast> (43)
    on left: 13 14 15, on right: 6 15
while_statement <ast> (44)
    on left: 16, on right: 7
io_func <ast> (45)
    on left: 17 18, on right: 8
fprintln <ast> (46)
    on left: 19 20 21, on right: 17
freadln <ast> (47)
    on left: 22 23, on right: 18
expr <ast> (48)
    on left: 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39, on right:
    10 11 12 13 14 15 16 24 25 26 27 28 29 30 31 32 33 34 35 36
comments <ast> (49)
    on left: 40, on right: 9


State 0

    0 $accept: . program $end

    fn  shift, and go to state 1

    program  go to state 2
    main     go to state 3


State 1

    2 main: fn . fmain lpar rpar lbrace statements rbrace

    fmain  shift, and go to state 4


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    1 program: main .

    $default  reduce using rule 1 (program)


State 4

    2 main: fn fmain . lpar rpar lbrace statements rbrace

    lpar  shift, and go to state 6


State 5

    0 $accept: program $end .

    $default  accept


State 6

    2 main: fn fmain lpar . rpar lbrace statements rbrace

    rpar  shift, and go to state 7


State 7

    2 main: fn fmain lpar rpar . lbrace statements rbrace

    lbrace  shift, and go to state 8


State 8

    2 main: fn fmain lpar rpar lbrace . statements rbrace

    let          shift, and go to state 9
    IF           shift, and go to state 10
    WHILE        shift, and go to state 11
    println      shift, and go to state 12
    readln       shift, and go to state 13
    symbol       shift, and go to state 14
    commentline  shift, and go to state 15

    $default  reduce using rule 4 (statements)

    statements       go to state 16
    statement        go to state 17
    assignment       go to state 18
    if_statement     go to state 19
    while_statement  go to state 20
    io_func          go to state 21
    fprintln         go to state 22
    freadln          go to state 23
    comments         go to state 24


State 9

   10 assignment: let . symbol equal expr semic
   11           | let . mut symbol equal expr semic
   23 freadln: let . symbol equal readln lpar rpar semic

    mut     shift, and go to state 25
    symbol  shift, and go to state 26


State 10

   13 if_statement: IF . expr lbrace statements rbrace
   14             | IF . expr lbrace statements rbrace ELSE lbrace statements rbrace
   15             | IF . expr lbrace statements rbrace ELSE if_statement

    number  shift, and go to state 27
    symbol  shift, and go to state 28
    minus   shift, and go to state 29

    expr  go to state 30


State 11

   16 while_statement: WHILE . expr lbrace statements rbrace

    number  shift, and go to state 27
    symbol  shift, and go to state 28
    minus   shift, and go to state 29

    expr  go to state 31


State 12

   19 fprintln: println . lpar string rpar semic
   20         | println . lpar symbol rpar semic
   21         | println . lpar number rpar semic

    lpar  shift, and go to state 32


State 13

   22 freadln: readln . lpar symbol rpar semic

    lpar  shift, and go to state 33


State 14

   12 assignment: symbol . equal expr semic

    equal  shift, and go to state 34


State 15

   40 comments: commentline .

    $default  reduce using rule 40 (comments)


State 16

    2 main: fn fmain lpar rpar lbrace statements . rbrace

    rbrace  shift, and go to state 35


State 17

    3 statements: statement . statements

    let          shift, and go to state 9
    IF           shift, and go to state 10
    WHILE        shift, and go to state 11
    println      shift, and go to state 12
    readln       shift, and go to state 13
    symbol       shift, and go to state 14
    commentline  shift, and go to state 15

    $default  reduce using rule 4 (statements)

    statements       go to state 36
    statement        go to state 17
    assignment       go to state 18
    if_statement     go to state 19
    while_statement  go to state 20
    io_func          go to state 21
    fprintln         go to state 22
    freadln          go to state 23
    comments         go to state 24


State 18

    5 statement: assignment .

    $default  reduce using rule 5 (statement)


State 19

    6 statement: if_statement .

    $default  reduce using rule 6 (statement)


State 20

    7 statement: while_statement .

    $default  reduce using rule 7 (statement)


State 21

    8 statement: io_func .

    $default  reduce using rule 8 (statement)


State 22

   17 io_func: fprintln .

    $default  reduce using rule 17 (io_func)


State 23

   18 io_func: freadln .

    $default  reduce using rule 18 (io_func)


State 24

    9 statement: comments .

    $default  reduce using rule 9 (statement)


State 25

   11 assignment: let mut . symbol equal expr semic

    symbol  shift, and go to state 37


State 26

   10 assignment: let symbol . equal expr semic
   23 freadln: let symbol . equal readln lpar rpar semic

    equal  shift, and go to state 38


State 27

   37 expr: number .

    $default  reduce using rule 37 (expr)


State 28

   39 expr: symbol .

    $default  reduce using rule 39 (expr)


State 29

   38 expr: minus . number

    number  shift, and go to state 39


State 30

   13 if_statement: IF expr . lbrace statements rbrace
   14             | IF expr . lbrace statements rbrace ELSE lbrace statements rbrace
   15             | IF expr . lbrace statements rbrace ELSE if_statement
   24 expr: expr . and expr
   25     | expr . or expr
   26     | expr . eqt expr
   27     | expr . neq expr
   28     | expr . grt expr
   29     | expr . geq expr
   30     | expr . lrt expr
   31     | expr . leq expr
   32     | expr . plus expr
   33     | expr . mult expr
   34     | expr . minus expr
   35     | expr . divi expr
   36     | expr . mod expr

    plus    shift, and go to state 40
    minus   shift, and go to state 41
    mult    shift, and go to state 42
    divi    shift, and go to state 43
    mod     shift, and go to state 44
    and     shift, and go to state 45
    or      shift, and go to state 46
    eqt     shift, and go to state 47
    grt     shift, and go to state 48
    geq     shift, and go to state 49
    lrt     shift, and go to state 50
    leq     shift, and go to state 51
    neq     shift, and go to state 52
    lbrace  shift, and go to state 53


State 31

   16 while_statement: WHILE expr . lbrace statements rbrace
   24 expr: expr . and expr
   25     | expr . or expr
   26     | expr . eqt expr
   27     | expr . neq expr
   28     | expr . grt expr
   29     | expr . geq expr
   30     | expr . lrt expr
   31     | expr . leq expr
   32     | expr . plus expr
   33     | expr . mult expr
   34     | expr . minus expr
   35     | expr . divi expr
   36     | expr . mod expr

    plus    shift, and go to state 40
    minus   shift, and go to state 41
    mult    shift, and go to state 42
    divi    shift, and go to state 43
    mod     shift, and go to state 44
    and     shift, and go to state 45
    or      shift, and go to state 46
    eqt     shift, and go to state 47
    grt     shift, and go to state 48
    geq     shift, and go to state 49
    lrt     shift, and go to state 50
    leq     shift, and go to state 51
    neq     shift, and go to state 52
    lbrace  shift, and go to state 54


State 32

   19 fprintln: println lpar . string rpar semic
   20         | println lpar . symbol rpar semic
   21         | println lpar . number rpar semic

    number  shift, and go to state 55
    symbol  shift, and go to state 56
    string  shift, and go to state 57


State 33

   22 freadln: readln lpar . symbol rpar semic

    symbol  shift, and go to state 58


State 34

   12 assignment: symbol equal . expr semic

    number  shift, and go to state 27
    symbol  shift, and go to state 28
    minus   shift, and go to state 29

    expr  go to state 59


State 35

    2 main: fn fmain lpar rpar lbrace statements rbrace .

    $default  reduce using rule 2 (main)


State 36

    3 statements: statement statements .

    $default  reduce using rule 3 (statements)


State 37

   11 assignment: let mut symbol . equal expr semic

    equal  shift, and go to state 60


State 38

   10 assignment: let symbol equal . expr semic
   23 freadln: let symbol equal . readln lpar rpar semic

    readln  shift, and go to state 61
    number  shift, and go to state 27
    symbol  shift, and go to state 28
    minus   shift, and go to state 29

    expr  go to state 62


State 39

   38 expr: minus number .

    $default  reduce using rule 38 (expr)


State 40

   32 expr: expr plus . expr

    number  shift, and go to state 27
    symbol  shift, and go to state 28
    minus   shift, and go to state 29

    expr  go to state 63


State 41

   34 expr: expr minus . expr

    number  shift, and go to state 27
    symbol  shift, and go to state 28
    minus   shift, and go to state 29

    expr  go to state 64


State 42

   33 expr: expr mult . expr

    number  shift, and go to state 27
    symbol  shift, and go to state 28
    minus   shift, and go to state 29

    expr  go to state 65


State 43

   35 expr: expr divi . expr

    number  shift, and go to state 27
    symbol  shift, and go to state 28
    minus   shift, and go to state 29

    expr  go to state 66


State 44

   36 expr: expr mod . expr

    number  shift, and go to state 27
    symbol  shift, and go to state 28
    minus   shift, and go to state 29

    expr  go to state 67


State 45

   24 expr: expr and . expr

    number  shift, and go to state 27
    symbol  shift, and go to state 28
    minus   shift, and go to state 29

    expr  go to state 68


State 46

   25 expr: expr or . expr

    number  shift, and go to state 27
    symbol  shift, and go to state 28
    minus   shift, and go to state 29

    expr  go to state 69


State 47

   26 expr: expr eqt . expr

    number  shift, and go to state 27
    symbol  shift, and go to state 28
    minus   shift, and go to state 29

    expr  go to state 70


State 48

   28 expr: expr grt . expr

    number  shift, and go to state 27
    symbol  shift, and go to state 28
    minus   shift, and go to state 29

    expr  go to state 71


State 49

   29 expr: expr geq . expr

    number  shift, and go to state 27
    symbol  shift, and go to state 28
    minus   shift, and go to state 29

    expr  go to state 72


State 50

   30 expr: expr lrt . expr

    number  shift, and go to state 27
    symbol  shift, and go to state 28
    minus   shift, and go to state 29

    expr  go to state 73


State 51

   31 expr: expr leq . expr

    number  shift, and go to state 27
    symbol  shift, and go to state 28
    minus   shift, and go to state 29

    expr  go to state 74


State 52

   27 expr: expr neq . expr

    number  shift, and go to state 27
    symbol  shift, and go to state 28
    minus   shift, and go to state 29

    expr  go to state 75


State 53

   13 if_statement: IF expr lbrace . statements rbrace
   14             | IF expr lbrace . statements rbrace ELSE lbrace statements rbrace
   15             | IF expr lbrace . statements rbrace ELSE if_statement

    let          shift, and go to state 9
    IF           shift, and go to state 10
    WHILE        shift, and go to state 11
    println      shift, and go to state 12
    readln       shift, and go to state 13
    symbol       shift, and go to state 14
    commentline  shift, and go to state 15

    $default  reduce using rule 4 (statements)

    statements       go to state 76
    statement        go to state 17
    assignment       go to state 18
    if_statement     go to state 19
    while_statement  go to state 20
    io_func          go to state 21
    fprintln         go to state 22
    freadln          go to state 23
    comments         go to state 24


State 54

   16 while_statement: WHILE expr lbrace . statements rbrace

    let          shift, and go to state 9
    IF           shift, and go to state 10
    WHILE        shift, and go to state 11
    println      shift, and go to state 12
    readln       shift, and go to state 13
    symbol       shift, and go to state 14
    commentline  shift, and go to state 15

    $default  reduce using rule 4 (statements)

    statements       go to state 77
    statement        go to state 17
    assignment       go to state 18
    if_statement     go to state 19
    while_statement  go to state 20
    io_func          go to state 21
    fprintln         go to state 22
    freadln          go to state 23
    comments         go to state 24


State 55

   21 fprintln: println lpar number . rpar semic

    rpar  shift, and go to state 78


State 56

   20 fprintln: println lpar symbol . rpar semic

    rpar  shift, and go to state 79


State 57

   19 fprintln: println lpar string . rpar semic

    rpar  shift, and go to state 80


State 58

   22 freadln: readln lpar symbol . rpar semic

    rpar  shift, and go to state 81


State 59

   12 assignment: symbol equal expr . semic
   24 expr: expr . and expr
   25     | expr . or expr
   26     | expr . eqt expr
   27     | expr . neq expr
   28     | expr . grt expr
   29     | expr . geq expr
   30     | expr . lrt expr
   31     | expr . leq expr
   32     | expr . plus expr
   33     | expr . mult expr
   34     | expr . minus expr
   35     | expr . divi expr
   36     | expr . mod expr

    plus   shift, and go to state 40
    minus  shift, and go to state 41
    mult   shift, and go to state 42
    divi   shift, and go to state 43
    mod    shift, and go to state 44
    and    shift, and go to state 45
    or     shift, and go to state 46
    eqt    shift, and go to state 47
    grt    shift, and go to state 48
    geq    shift, and go to state 49
    lrt    shift, and go to state 50
    leq    shift, and go to state 51
    neq    shift, and go to state 52
    semic  shift, and go to state 82


State 60

   11 assignment: let mut symbol equal . expr semic

    number  shift, and go to state 27
    symbol  shift, and go to state 28
    minus   shift, and go to state 29

    expr  go to state 83


State 61

   23 freadln: let symbol equal readln . lpar rpar semic

    lpar  shift, and go to state 84


State 62

   10 assignment: let symbol equal expr . semic
   24 expr: expr . and expr
   25     | expr . or expr
   26     | expr . eqt expr
   27     | expr . neq expr
   28     | expr . grt expr
   29     | expr . geq expr
   30     | expr . lrt expr
   31     | expr . leq expr
   32     | expr . plus expr
   33     | expr . mult expr
   34     | expr . minus expr
   35     | expr . divi expr
   36     | expr . mod expr

    plus   shift, and go to state 40
    minus  shift, and go to state 41
    mult   shift, and go to state 42
    divi   shift, and go to state 43
    mod    shift, and go to state 44
    and    shift, and go to state 45
    or     shift, and go to state 46
    eqt    shift, and go to state 47
    grt    shift, and go to state 48
    geq    shift, and go to state 49
    lrt    shift, and go to state 50
    leq    shift, and go to state 51
    neq    shift, and go to state 52
    semic  shift, and go to state 85


State 63

   24 expr: expr . and expr
   25     | expr . or expr
   26     | expr . eqt expr
   27     | expr . neq expr
   28     | expr . grt expr
   29     | expr . geq expr
   30     | expr . lrt expr
   31     | expr . leq expr
   32     | expr . plus expr
   32     | expr plus expr .
   33     | expr . mult expr
   34     | expr . minus expr
   35     | expr . divi expr
   36     | expr . mod expr

    mult  shift, and go to state 42
    divi  shift, and go to state 43
    mod   shift, and go to state 44

    $default  reduce using rule 32 (expr)


State 64

   24 expr: expr . and expr
   25     | expr . or expr
   26     | expr . eqt expr
   27     | expr . neq expr
   28     | expr . grt expr
   29     | expr . geq expr
   30     | expr . lrt expr
   31     | expr . leq expr
   32     | expr . plus expr
   33     | expr . mult expr
   34     | expr . minus expr
   34     | expr minus expr .
   35     | expr . divi expr
   36     | expr . mod expr

    mult  shift, and go to state 42
    divi  shift, and go to state 43
    mod   shift, and go to state 44

    $default  reduce using rule 34 (expr)


State 65

   24 expr: expr . and expr
   25     | expr . or expr
   26     | expr . eqt expr
   27     | expr . neq expr
   28     | expr . grt expr
   29     | expr . geq expr
   30     | expr . lrt expr
   31     | expr . leq expr
   32     | expr . plus expr
   33     | expr . mult expr
   33     | expr mult expr .
   34     | expr . minus expr
   35     | expr . divi expr
   36     | expr . mod expr

    $default  reduce using rule 33 (expr)


State 66

   24 expr: expr . and expr
   25     | expr . or expr
   26     | expr . eqt expr
   27     | expr . neq expr
   28     | expr . grt expr
   29     | expr . geq expr
   30     | expr . lrt expr
   31     | expr . leq expr
   32     | expr . plus expr
   33     | expr . mult expr
   34     | expr . minus expr
   35     | expr . divi expr
   35     | expr divi expr .
   36     | expr . mod expr

    $default  reduce using rule 35 (expr)


State 67

   24 expr: expr . and expr
   25     | expr . or expr
   26     | expr . eqt expr
   27     | expr . neq expr
   28     | expr . grt expr
   29     | expr . geq expr
   30     | expr . lrt expr
   31     | expr . leq expr
   32     | expr . plus expr
   33     | expr . mult expr
   34     | expr . minus expr
   35     | expr . divi expr
   36     | expr . mod expr
   36     | expr mod expr .

    $default  reduce using rule 36 (expr)


State 68

   24 expr: expr . and expr
   24     | expr and expr .
   25     | expr . or expr
   26     | expr . eqt expr
   27     | expr . neq expr
   28     | expr . grt expr
   29     | expr . geq expr
   30     | expr . lrt expr
   31     | expr . leq expr
   32     | expr . plus expr
   33     | expr . mult expr
   34     | expr . minus expr
   35     | expr . divi expr
   36     | expr . mod expr

    plus   shift, and go to state 40
    minus  shift, and go to state 41
    mult   shift, and go to state 42
    divi   shift, and go to state 43
    mod    shift, and go to state 44

    $default  reduce using rule 24 (expr)


State 69

   24 expr: expr . and expr
   25     | expr . or expr
   25     | expr or expr .
   26     | expr . eqt expr
   27     | expr . neq expr
   28     | expr . grt expr
   29     | expr . geq expr
   30     | expr . lrt expr
   31     | expr . leq expr
   32     | expr . plus expr
   33     | expr . mult expr
   34     | expr . minus expr
   35     | expr . divi expr
   36     | expr . mod expr

    plus   shift, and go to state 40
    minus  shift, and go to state 41
    mult   shift, and go to state 42
    divi   shift, and go to state 43
    mod    shift, and go to state 44

    $default  reduce using rule 25 (expr)


State 70

   24 expr: expr . and expr
   25     | expr . or expr
   26     | expr . eqt expr
   26     | expr eqt expr .
   27     | expr . neq expr
   28     | expr . grt expr
   29     | expr . geq expr
   30     | expr . lrt expr
   31     | expr . leq expr
   32     | expr . plus expr
   33     | expr . mult expr
   34     | expr . minus expr
   35     | expr . divi expr
   36     | expr . mod expr

    plus   shift, and go to state 40
    minus  shift, and go to state 41
    mult   shift, and go to state 42
    divi   shift, and go to state 43
    mod    shift, and go to state 44
    and    shift, and go to state 45
    or     shift, and go to state 46

    $default  reduce using rule 26 (expr)


State 71

   24 expr: expr . and expr
   25     | expr . or expr
   26     | expr . eqt expr
   27     | expr . neq expr
   28     | expr . grt expr
   28     | expr grt expr .
   29     | expr . geq expr
   30     | expr . lrt expr
   31     | expr . leq expr
   32     | expr . plus expr
   33     | expr . mult expr
   34     | expr . minus expr
   35     | expr . divi expr
   36     | expr . mod expr

    plus   shift, and go to state 40
    minus  shift, and go to state 41
    mult   shift, and go to state 42
    divi   shift, and go to state 43
    mod    shift, and go to state 44
    and    shift, and go to state 45
    or     shift, and go to state 46

    $default  reduce using rule 28 (expr)


State 72

   24 expr: expr . and expr
   25     | expr . or expr
   26     | expr . eqt expr
   27     | expr . neq expr
   28     | expr . grt expr
   29     | expr . geq expr
   29     | expr geq expr .
   30     | expr . lrt expr
   31     | expr . leq expr
   32     | expr . plus expr
   33     | expr . mult expr
   34     | expr . minus expr
   35     | expr . divi expr
   36     | expr . mod expr

    plus   shift, and go to state 40
    minus  shift, and go to state 41
    mult   shift, and go to state 42
    divi   shift, and go to state 43
    mod    shift, and go to state 44
    and    shift, and go to state 45
    or     shift, and go to state 46

    $default  reduce using rule 29 (expr)


State 73

   24 expr: expr . and expr
   25     | expr . or expr
   26     | expr . eqt expr
   27     | expr . neq expr
   28     | expr . grt expr
   29     | expr . geq expr
   30     | expr . lrt expr
   30     | expr lrt expr .
   31     | expr . leq expr
   32     | expr . plus expr
   33     | expr . mult expr
   34     | expr . minus expr
   35     | expr . divi expr
   36     | expr . mod expr

    plus   shift, and go to state 40
    minus  shift, and go to state 41
    mult   shift, and go to state 42
    divi   shift, and go to state 43
    mod    shift, and go to state 44
    and    shift, and go to state 45
    or     shift, and go to state 46

    $default  reduce using rule 30 (expr)


State 74

   24 expr: expr . and expr
   25     | expr . or expr
   26     | expr . eqt expr
   27     | expr . neq expr
   28     | expr . grt expr
   29     | expr . geq expr
   30     | expr . lrt expr
   31     | expr . leq expr
   31     | expr leq expr .
   32     | expr . plus expr
   33     | expr . mult expr
   34     | expr . minus expr
   35     | expr . divi expr
   36     | expr . mod expr

    plus   shift, and go to state 40
    minus  shift, and go to state 41
    mult   shift, and go to state 42
    divi   shift, and go to state 43
    mod    shift, and go to state 44
    and    shift, and go to state 45
    or     shift, and go to state 46

    $default  reduce using rule 31 (expr)


State 75

   24 expr: expr . and expr
   25     | expr . or expr
   26     | expr . eqt expr
   27     | expr . neq expr
   27     | expr neq expr .
   28     | expr . grt expr
   29     | expr . geq expr
   30     | expr . lrt expr
   31     | expr . leq expr
   32     | expr . plus expr
   33     | expr . mult expr
   34     | expr . minus expr
   35     | expr . divi expr
   36     | expr . mod expr

    plus   shift, and go to state 40
    minus  shift, and go to state 41
    mult   shift, and go to state 42
    divi   shift, and go to state 43
    mod    shift, and go to state 44
    and    shift, and go to state 45
    or     shift, and go to state 46

    $default  reduce using rule 27 (expr)


State 76

   13 if_statement: IF expr lbrace statements . rbrace
   14             | IF expr lbrace statements . rbrace ELSE lbrace statements rbrace
   15             | IF expr lbrace statements . rbrace ELSE if_statement

    rbrace  shift, and go to state 86


State 77

   16 while_statement: WHILE expr lbrace statements . rbrace

    rbrace  shift, and go to state 87


State 78

   21 fprintln: println lpar number rpar . semic

    semic  shift, and go to state 88


State 79

   20 fprintln: println lpar symbol rpar . semic

    semic  shift, and go to state 89


State 80

   19 fprintln: println lpar string rpar . semic

    semic  shift, and go to state 90


State 81

   22 freadln: readln lpar symbol rpar . semic

    semic  shift, and go to state 91


State 82

   12 assignment: symbol equal expr semic .

    $default  reduce using rule 12 (assignment)


State 83

   11 assignment: let mut symbol equal expr . semic
   24 expr: expr . and expr
   25     | expr . or expr
   26     | expr . eqt expr
   27     | expr . neq expr
   28     | expr . grt expr
   29     | expr . geq expr
   30     | expr . lrt expr
   31     | expr . leq expr
   32     | expr . plus expr
   33     | expr . mult expr
   34     | expr . minus expr
   35     | expr . divi expr
   36     | expr . mod expr

    plus   shift, and go to state 40
    minus  shift, and go to state 41
    mult   shift, and go to state 42
    divi   shift, and go to state 43
    mod    shift, and go to state 44
    and    shift, and go to state 45
    or     shift, and go to state 46
    eqt    shift, and go to state 47
    grt    shift, and go to state 48
    geq    shift, and go to state 49
    lrt    shift, and go to state 50
    leq    shift, and go to state 51
    neq    shift, and go to state 52
    semic  shift, and go to state 92


State 84

   23 freadln: let symbol equal readln lpar . rpar semic

    rpar  shift, and go to state 93


State 85

   10 assignment: let symbol equal expr semic .

    $default  reduce using rule 10 (assignment)


State 86

   13 if_statement: IF expr lbrace statements rbrace .
   14             | IF expr lbrace statements rbrace . ELSE lbrace statements rbrace
   15             | IF expr lbrace statements rbrace . ELSE if_statement

    ELSE  shift, and go to state 94

    $default  reduce using rule 13 (if_statement)


State 87

   16 while_statement: WHILE expr lbrace statements rbrace .

    $default  reduce using rule 16 (while_statement)


State 88

   21 fprintln: println lpar number rpar semic .

    $default  reduce using rule 21 (fprintln)


State 89

   20 fprintln: println lpar symbol rpar semic .

    $default  reduce using rule 20 (fprintln)


State 90

   19 fprintln: println lpar string rpar semic .

    $default  reduce using rule 19 (fprintln)


State 91

   22 freadln: readln lpar symbol rpar semic .

    $default  reduce using rule 22 (freadln)


State 92

   11 assignment: let mut symbol equal expr semic .

    $default  reduce using rule 11 (assignment)


State 93

   23 freadln: let symbol equal readln lpar rpar . semic

    semic  shift, and go to state 95


State 94

   14 if_statement: IF expr lbrace statements rbrace ELSE . lbrace statements rbrace
   15             | IF expr lbrace statements rbrace ELSE . if_statement

    IF      shift, and go to state 10
    lbrace  shift, and go to state 96

    if_statement  go to state 97


State 95

   23 freadln: let symbol equal readln lpar rpar semic .

    $default  reduce using rule 23 (freadln)


State 96

   14 if_statement: IF expr lbrace statements rbrace ELSE lbrace . statements rbrace

    let          shift, and go to state 9
    IF           shift, and go to state 10
    WHILE        shift, and go to state 11
    println      shift, and go to state 12
    readln       shift, and go to state 13
    symbol       shift, and go to state 14
    commentline  shift, and go to state 15

    $default  reduce using rule 4 (statements)

    statements       go to state 98
    statement        go to state 17
    assignment       go to state 18
    if_statement     go to state 19
    while_statement  go to state 20
    io_func          go to state 21
    fprintln         go to state 22
    freadln          go to state 23
    comments         go to state 24


State 97

   15 if_statement: IF expr lbrace statements rbrace ELSE if_statement .

    $default  reduce using rule 15 (if_statement)


State 98

   14 if_statement: IF expr lbrace statements rbrace ELSE lbrace statements . rbrace

    rbrace  shift, and go to state 99


State 99

   14 if_statement: IF expr lbrace statements rbrace ELSE lbrace statements rbrace .

    $default  reduce using rule 14 (if_statement)
